<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.b2.sinnanda.mapper.ReviewMapper">

<!-- #인덱스 (작성자 : 김영후, 수정자 : 이승준)
	1. 조회
		(목록)selectNotCommentedReviewList
		(개수)selectNotCommentedReviewTotalCount
		(목록)selectReviewList
		(개수)selectReviewTotalCount
		(상세)selectReviewOne
		
	2. 삽입
		insertReviewComment
		
	3. 수정
		
	4. 삭제
		deleteReviewComment
		deleteReview
		
 -->

<!-- 1. 조회 -->
	
	<!-- [김영후] (목록)"답변없는 리뷰 목록" resultMap -->
	<resultMap type="com.b2.sinnanda.vo.Review" id="NotCommentedReviewListMap">
		<id column="review_no" property="reviewNo"/>
		<result column="payment_no" property="paymentNo"/>
		<result column="review_content" property="reviewContent"/>
		<result column="review_rank" property="reviewRank"/>
		<result column="review_recommend" property="reviewRecommend"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="member_name" property="memberName"/>
		<result column="accom_name" property="accomName"/>
		<result column="room_name" property="roomName"/>
	</resultMap>
	<!-- [김영후] (목록)"답변없는 리뷰 목록" 조회 -->
	<select id="selectNotCommentedReviewList" parameterType="Map" resultMap="NotCommentedReviewListMap">
		SELECT 
			r.review_no,
			p.payment_no, 
			r.review_content, 
			r.review_rank, 
			r.review_recommend, 
			r.create_date, 
			r.update_date, 
			m.member_name, 
			a.accom_name, 
			ro.room_name
		FROM review r
			LEFT JOIN payment p ON r.payment_no = p.payment_no 
			LEFT JOIN reserve re ON p.reserve_no = re.reserve_no
			LEFT JOIN room ro ON ro.room_no = re.room_no
			LEFT JOIN accom a ON a.accom_no = ro.accom_no
			LEFT JOIN member m ON re.member_no = m.member_no	
			LEFT JOIN host h ON a.host_no = h.host_no	
			LEFT JOIN review_comment rc ON rc.review_no = r.review_no	
		<!-- [이승준] 사업자가 접근하는 경우 -->
		<if test="userLevel == 2">
			<where>
				a.host_no = #{hostNo} AND rc.review_comment_content IS NULL
			</where>
		</if>
		<!-- [이승준] 관리자가 접근하는 경우 -->
		<if test="userLevel == 3">
			<where>
				rc.review_comment_content IS NULL
			</where>
		</if>
		ORDER BY create_date DESC
	</select>
	
	<!-- [이승준] (개수)"답변없는 리뷰 개수" 조회 -->
	<select id="selectNotCommentedReviewTotalCount" parameterType="Map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM review r
			LEFT JOIN payment p ON r.payment_no = p.payment_no 
			LEFT JOIN reserve re ON p.reserve_no = re.reserve_no
			LEFT JOIN room ro ON ro.room_no = re.room_no
			LEFT JOIN accom a ON a.accom_no = ro.accom_no
			LEFT JOIN member m ON re.member_no = m.member_no	
			LEFT JOIN host h ON a.host_no = h.host_no	
			LEFT JOIN review_comment rc ON rc.review_no = r.review_no
		<!-- [이승준] 사업자가 접근하는 경우 -->
		<if test="userLevel == 2">
			<where>
				a.host_no = #{hostNo} AND rc.review_comment_content IS NULL
			</where>
		</if>
		<!-- [이승준] 관리자가 접근하는 경우 -->
		<if test="userLevel == 3">
			<where>
				rc.review_comment_content IS NULL
			</where>
		</if>
	</select>
	
	
	<!-- [김영후] (목록)"리뷰 목록" 조회 resultMap -->
	<resultMap type="com.b2.sinnanda.vo.Review" id="ReviewListMap">
		<id column="review_no" property="reviewNo"/>
		<result column="payment_no" property="paymentNo"/>
		<result column="review_content" property="reviewContent"/>
		<result column="review_rank" property="reviewRank"/>
		<result column="review_recommend" property="reviewRecommend"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="member_name" property="memberName"/>
		<result column="accom_name" property="accomName"/>
		<result column="room_name" property="roomName"/>
		
		<collection property="reviewComment" ofType="com.b2.sinnanda.vo.ReviewComment">
			<result column="review_no" property="reviewNo"/>
			<result column="review_comment_content" property="reviewCommentContent"/>
			<result column="comment_date" property="commentDate"/>
			<result column="host_name" property="hostName"/>		
		</collection>
	</resultMap>
	<!-- [김영후] (목록)"리뷰 목록" 조회 -->
	<select id="selectReviewList" parameterType="Map" resultMap="ReviewListMap">
		SELECT 
			r.review_no,
			p.payment_no, 
			r.review_content, 
			r.review_rank, 
			r.review_recommend, 
			r.create_date, 
			r.update_date, 
			m.member_name, 
			a.accom_name, 
			ro.room_name, 
			rc.review_comment_content, 
			rc.comment_date, 
			h.host_name
		FROM review r
			LEFT JOIN payment p ON r.payment_no = p.payment_no 
			LEFT JOIN reserve re ON p.reserve_no = re.reserve_no
			LEFT JOIN room ro ON ro.room_no = re.room_no
			LEFT JOIN accom a ON a.accom_no = ro.accom_no
			LEFT JOIN host h ON a.host_no = h.host_no	
			LEFT JOIN member m ON re.member_no = m.member_no			
			LEFT JOIN review_comment rc ON rc.review_no = r.review_no
		<where>
			a.host_no = #{hostNo}
		</where>
		ORDER BY create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- [이승준] (개수)"리뷰 개수" 조회-->
	<select id="selectReviewTotalCount" parameterType="Map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM review r
			LEFT JOIN payment p ON r.payment_no = p.payment_no 
			LEFT JOIN reserve re ON p.reserve_no = re.reserve_no
			LEFT JOIN room ro ON ro.room_no = re.room_no
			LEFT JOIN accom a ON a.accom_no = ro.accom_no
			LEFT JOIN member m ON re.member_no = m.member_no	
			LEFT JOIN host h ON a.host_no = h.host_no	
			LEFT JOIN review_comment rc ON rc.review_no = r.review_no
		<where>
			a.host_no = #{hostNo}
		</where>
	</select>
	
	
	<!-- [이승준] (상세)"리뷰 상세" 조회 resultMap -->
	<resultMap type="com.b2.sinnanda.vo.Review" id="ReviewOneMap">
		<id column="review_no" property="reviewNo"/>
		<result column="payment_no" property="paymentNo"/>
		<result column="reserve_no" property="reserveNo"/>
		<result column="review_content" property="reviewContent"/>
		<result column="review_rank" property="reviewRank"/>
		<result column="review_recommend" property="reviewRecommend"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="member_name" property="memberName"/>
		<result column="accom_name" property="accomName"/>
		<result column="room_name" property="roomName"/>
		
		<collection property="reviewComment" ofType="com.b2.sinnanda.vo.ReviewComment">
			<result column="review_comment_content" property="reviewCommentContent"/>
			<result column="comment_date" property="commentDate"/>
			<result column="host_name" property="hostName"/>		
		</collection>
	</resultMap>
	<!-- [이승준] (상세)"리뷰 상세" 조회 -->
	<select id="selectReviewOne" parameterType="int" resultMap="ReviewOneMap">
		SELECT 
			r.review_no,
			p.payment_no, 
			re.reserve_no, 
			r.review_content, 
			r.review_rank, 
			r.review_recommend, 
			r.create_date, 
			r.update_date, 
			m.member_name, 
			a.accom_name, 
			ro.room_name, 
			rc.review_comment_content, 
			rc.comment_date, 
			h.host_name
		FROM review r
			LEFT JOIN payment p ON r.payment_no = p.payment_no 
			LEFT JOIN reserve re ON p.reserve_no = re.reserve_no
			LEFT JOIN room ro ON ro.room_no = re.room_no
			LEFT JOIN accom a ON a.accom_no = ro.accom_no
			LEFT JOIN host h ON a.host_no = h.host_no	
			LEFT JOIN member m ON re.member_no = m.member_no			
			LEFT JOIN review_comment rc ON rc.review_no = r.review_no
		WHERE r.review_no = #{reviewNo}
	</select>
	
	
	
<!-- 2. 삽입 -->
	
	<!-- [이승준] "리뷰" 삽입 -->
	<insert id="insertReview" parameterType="com.b2.sinnanda.vo.Review">
		INSERT INTO review(
			payment_no, 
			review_content, 
			review_rank, 
			review_recommend, 
			create_date, 
			update_date
		) VALUES (
			#{paymentNo}, 
			#{reviewContent}, 
			#{reviewRank}, 
			#{reviewRecommend}, 
			NOW(), 
			NOW()
		)	
		<selectKey keyProperty="reviewNo" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- [김영후] "리뷰 답변" 삽입 -->
	<insert id="insertReviewComment" parameterType="com.b2.sinnanda.vo.ReviewComment">
		INSERT INTO review_comment(
			review_no,
			review_comment_content, 
			comment_date
		) VALUES (
			#{reviewNo}, 
			#{reviewCommentContent},
			NOW()
		)	
	</insert>
	
	
	
<!-- 3. 수정 -->





<!-- 4. 삭제 -->

	<!-- [김영후] "리뷰 답변" 삭제 -->
	<delete id="deleteReviewComment" parameterType="int">
		DELETE 
		FROM review_comment
		WHERE review_no = #{reviewNo}
	</delete>
	
	<!-- [이승준] "리뷰" 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE 
		FROM review
		WHERE review_no = #{reviewNo}
	</delete>
	
</mapper>