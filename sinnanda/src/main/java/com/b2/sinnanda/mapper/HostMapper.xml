<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.b2.sinnanda.mapper.HostMapper">

<!-- #인덱스 (작성자 : 이승준)
	1. 조회
		selectHostPw
		selectHostOne
		selectHostOneWithAddress
		
	2. 삽입
		insertHost
		insertHostAdress
		
	3. 수정
		updateHost
		updateHostPw
		
	4. 삭제
		deleteHost
		
 -->

<!-- 1. 조회 -->

	<!-- [이승준] (상세)"사업자 비밀번호" 조회 -->
	<select id="selectHostPw" parameterType="int" resultType="String">
		SELECT 
			host_pw hostPw
		FROM host
		WHERE host_no = #{hostNo}
	</select>

	<!-- [이승준] (상세)"사업자 상세" 조회 -->
	<select id="selectHostOne" parameterType="int">
		SELECT 
			host_no hostNo, 
			host_id hostId, 
			host_name hostName, 
			host_tel hostTel, 
			host_active hostActive, 
			member_level memberLevel, 
			create_date createDate, 
			update_date updateDate
		FROM host
		WHERE host_no = #{hostNo}
	</select>
	
	<!-- [이승준] (상세)"사업자 상세+주소" 조회 resultMap -->
	<resultMap type="com.b2.sinnanda.vo.Host" id="hostOneWithAddressMap">
		<id column="host_no" property="hostNo"/>
		<result column="host_id" property="hostId"/>
		<result column="host_name" property="hostName"/>
		<result column="host_tel" property="hostTel"/>
		<result column="host_active" property="hostActive"/>
		<result column="member_level" property="memberLevel"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		
		<collection property="hostAddress" ofType="com.b2.sinnanda.vo.HostAddress" resultMap="hostAddressMap"></collection>
	</resultMap>
	<!-- 사업자에 대한 주소 resultMap -->
	<resultMap id="hostAddressMap" type="com.b2.sinnanda.vo.HostAddress">
		<result column="address_detail" property="addressDetail"/>
		
		<collection property="address" ofType="com.b2.sinnanda.vo.Address" resultMap="hostAddressDetailMap"></collection>
	</resultMap>
	<!-- 사업자 주소에 대한 주소 resultMap -->
	<resultMap id="hostAddressDetailMap" type="com.b2.sinnanda.vo.Address">
		<id column="address_no" property="addressNo"/>
		<result column="sido" property="sido"/>
		<result column="sigungu" property="sigungu"/>
		<result column="road_name" property="roadName"/>
		<result column="main_building_code" property="mainBuildingCode"/>
		<result column="sub_building_code" property="subBuildingCode"/>
	</resultMap>
	<!-- [이승준] (상세)"사업자 상세+주소" 조회 -->
	<select id="selectHostOneWithAddress" parameterType="int" resultMap="hostOneWithAddressMap">
		SELECT 
			h.host_no, 
			h.host_id, 
			h.host_name, 
			h.host_tel, 
			h.host_active, 
			h.member_level, 
			h.create_date, 
			h.update_date,
			ha.address_detail, 
			a.address_no, 
			a.sido, 
			a.sigungu, 
			a.road_name, 
			a.main_building_code, 
			a.sub_building_code
		FROM host h 
			LEFT JOIN host_address ha ON ha.host_no = h.host_no
			LEFT JOIN address a ON a.address_no = ha.address_no
		WHERE h.host_no = #{hostNo}
	</select>
	
	<!-- [이승준] "사업자 PW 확인" 조회 -->
	<select id="selectHostPwCheck" parameterType="com.b2.sinnanda.vo.Host" resultType="int">
		SELECT COUNT(host_id)
		FROM host
		WHERE host_no = #{hostNo} AND host_pw = #{hostPw}
	</select>


	<!--[윤경환] 호스트가 가지고 있는 숙소 종류 -->
	<select id="selectHostAccom" parameterType ="int" resultType="com.b2.sinnanda.vo.Accom">
		SELECT  
			accom_name accomName,
			host_no hostNo
		FROM accom
		where host_no = #{hostNo}
	</select>
			
			

	<!--[윤경환] 숙소에 따라 사업자가 없는 수익 차트 -->
	<select id="totalAccomHostYear" parameterType="Map" resultType="java.util.Map">
		SELECT 
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =1 THEN pa.payment_price END),0) january,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =2 THEN pa.payment_price END),0) february,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =3 THEN pa.payment_price END),0) march,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =4 THEN pa.payment_price END),0) april,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =5 THEN pa.payment_price END),0) may,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =6 THEN pa.payment_price END),0) june,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =7 THEN pa.payment_price END),0) july,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =8 THEN pa.payment_price END),0) august,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =9 THEN pa.payment_price END),0) september,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =10 THEN pa.payment_price END),0) october,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =11 THEN pa.payment_price END),0) november,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =12 THEN pa.payment_price END),0) december
		FROM payment AS pa
			LEFT JOIN reserve AS re
		ON pa.reserve_no = re.reserve_no
			LEFT JOIN  room  AS ro
		ON re.room_no = ro.room_no
			LEFT join accom  AS ac 
		ON ac.accom_no = ro.accom_no
		WHERE YEAR(pa.create_date)= #{year} 
			AND ac.host_no = #{hostNo}
			AND pa.payment_price  IS NOT NULL
			<if test="accomName != null">
					AND ac.accom_name = #{accomName}
			</if>
		
	</select>
	
	
	
	<!--[윤경환] 사업자가 관리자한테 내는 수수료  -->
	<select id="totalDeduHostYear" parameterType="Map" resultType="java.util.Map">
		SELECT 
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =1 THEN ho.deduction_pay END),0) january,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =2 THEN ho.deduction_pay END),0) february,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =3 THEN ho.deduction_pay END),0) march,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =4 THEN ho.deduction_pay END),0) april,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =5 THEN ho.deduction_pay END),0) may,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =6 THEN ho.deduction_pay END),0) june,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =7 THEN ho.deduction_pay END),0) july,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =8 THEN ho.deduction_pay END),0) august,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =9 THEN ho.deduction_pay END),0) september,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =10 THEN ho.deduction_pay END),0) october,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =11 THEN ho.deduction_pay END),0) november,
				IFNULL(SUM(CASE WHEN MONTH(pa.update_date) =12 THEN ho.deduction_pay END),0) december
		FROM host_sales ho
			LEFT JOIN admin_sales ad
		ON ho.admin_sales_no = ad.admin_sales_no
			LEFT JOIN  payment pa
		ON pa.payment_no = ad.payment_no
			LEFT JOIN reserve re
		ON pa.reserve_no = re.reserve_no
			LEFT JOIN room ro
		ON re.room_no = ro.room_no
			LEFT JOIN accom ac 
		ON ro.accom_no = ac.accom_no
		WHERE YEAR(pa.update_date)=#{year}  
			AND ac.host_no = #{hostNo}
		<if test="accomName != null">
					AND ac.accom_name = #{accomName}
		</if>
		
	
	</select>
	
	<!-- [운경환] 호스트 컴플레인에 관한 분류  -->
	<select id="totalComplainYear" parameterType="Map" resultType="java.util.Map">
	
		SELECT 
			IFNULL(sum(co.complain_category = '예약 취소'),0) Com1,
			IFNULL(sum(co.complain_category = '예약일 변경'),0) Com2,
			IFNULL(sum(co.complain_category = '이용 붚편'),0) Com3,
			IFNULL(sum(co.complain_category = '기타'),0) Com4
		FROM complain co
		LEFT JOIN payment pa
			ON co.payment_no = pa.payment_no
		LEFT JOIN reserve re
			ON pa.reserve_no = re.reserve_no
		LEFT JOIN room ro 
			ON re.room_no = ro.room_no
		LEFT JOIN accom ac
			ON ro.accom_no = ac.accom_no
		WHERE ac.host_no = #{hostNo}
			AND YEAR(co.update_date) = #{year}
			<if test="accomName != null">
					AND ac.accom_name = #{accomName}
			</if>
	</select>

	<!-- [윤경환] '서업자' 관련 숙소별 후기 모음 -->
	<select id="totalReviewYear" parameterType="Map" resultType="java.util.Map">
			SELECT 
				IFNULL(COUNT(ew.review_recommend = '추천'),0) Rev1,
				IFNULL(COUNT(ew.review_recommend = '보통'),0) Rev2,
				IFNULL(COUNT(ew.review_recommend = '비추천'),0) Rev3
		FROM review ew
		LEFT JOIN  payment pa 
			ON pa.payment_no = ew.payment_no
		LEFT JOIN reserve re
			ON pa.reserve_no = re.reserve_no
		LEFT JOIN  room ro 
			ON re.room_no = ro.room_no
		LEFT JOIN accom ac
		 	ON ro.accom_no = ac.accom_no
		WHERE ac.host_no = #{hostNo} 
			AND YEAR(ew.update_date) = #{year}
			<if test="accomName != null">
					AND ac.accom_name = #{accomName}
			</if>
	
	
	</select>


<!-- 2. 삽입 -->
	
	<!-- [이승준] "사업자" 삽입 -->
	<insert id="insertHost" parameterType="com.b2.sinnanda.vo.Host">
		INSERT INTO host (
			host_id, 
			host_pw, 
			host_name, 
			host_tel, 
			host_active, 
			create_date, 
			update_date
		) VALUES (
			#{hostId}, 
			#{hostPw}, 
			#{hostName}, 
			#{hostTel}, 
			#{hostActive}, 
			NOW(),
			NOW() 
		)
		<selectKey keyProperty="hostNo" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	

<!-- 3. 수정 -->
	
	<!-- [이승준] "사업자" 수정 -->
	<update id="updateHost" parameterType="com.b2.sinnanda.vo.Host">
		UPDATE host
		SET host_name = #{hostName}, 
			host_tel = #{hostTel}, 
			host_active = #{hostActive}, 
			update_date = NOW()
		WHERE host_no = #{hostNo}
	</update>
	
	<!-- [이승준] "사업자 비밀번호" 수정 -->
	<update id="updateHostPw" parameterType="com.b2.sinnanda.vo.Host">
		UPDATE host
		SET host_pw = #{hostPw}, 
			update_date = NOW()
		WHERE host_no = #{hostNo}
	</update>
	
	
	
<!-- 4. 삭제 -->
	
	
	
	
	
</mapper>